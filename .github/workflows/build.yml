name: Build Evans Musical Granular

permissions:
  contents: write

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
          - os: macos-13
            platform: macos-intel
          - os: macos-14
            platform: macos-arm64
          - os: windows-latest
            platform: windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup CMake (Linux/Windows)
        if: runner.os != 'macOS'
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.20'

      - name: Setup CMake (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Build
        run: cmake --build build --config Release

      - name: Package plugin  
        shell: bash
        run: |
          # Create platform-specific zip with standard .clap filename inside (no directory structure)
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a EvansMusicalGranular-${{ matrix.platform }}.zip build/EvansMusicalGranular.clap
          else
            zip -j EvansMusicalGranular-${{ matrix.platform }}.zip build/EvansMusicalGranular.clap
          fi

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: EvansMusicalGranular-${{ matrix.platform }}
          path: EvansMusicalGranular-${{ matrix.platform }}.zip
          retention-days: 30
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.zip
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
